name: SDLC / SDK Update
run-name: ${{ format('SDK Update - {0} {1}', inputs.run-mode, inputs.sdk-version) }}

on:
  workflow_dispatch:
    inputs:
      run-mode:
        description: "Run Mode"
        type: choice
        options:
          - Update # opens a PR in this repo updating the SDK
          - Test # used for testing sdk-internal repo PRs
        default: "Test"
      sdk-package:
        description: "SDK Package"
        default: "com.bitwarden:sdk-android.dev"
      sdk-version:
        description: "SDK Version"
        default: "1.0.0-2577-fix-wasm-import"

permissions:
  contents: read
  packages: read

jobs:
  update:
    name: Update SDK
    if: ${{ inputs.run-mode == 'Update' }}
    runs-on: ubuntu-24.04

    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Android Build
        uses: ./.github/actions/setup-android-build

      - name: Switch to branch
        id: switch-branch
        run: |
          BRANCH_NAME="sdlc/sdk-update"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          git switch -c $BRANCH_NAME

      - name: Get current SDK version
        id: get-current-sdk
        run: |
          SDK_VERSION=$(grep "bitwardenSdk =" gradle/libs.versions.toml | cut -d'"' -f2)
          GIT_REF=$(echo "$SDK_VERSION" | cut -d'-' -f3-) # handles both commit hashes and branch names
          echo "Current SDK version: $SDK_VERSION"
          echo "Current SDK git ref: $GIT_REF"
          echo "version=$SDK_VERSION" >> $GITHUB_OUTPUT
          echo "git_ref=$GIT_REF" >> $GITHUB_OUTPUT

      - name: Update SDK Version
        env:
          _SDK_PACKAGE: ${{ inputs.sdk-package }}
          _SDK_VERSION: ${{ inputs.sdk-version }}
        run: |
          ./scripts/update-sdk-version.sh "$_SDK_PACKAGE" "$_SDK_VERSION"

      - name: Create branch and commit
        env:
          _SDK_PACKAGE: ${{ inputs.sdk-package }}
          _SDK_VERSION: ${{ inputs.sdk-version }}
          _BRANCH_NAME: ${{ steps.switch-branch.outputs.branch_name }}
        run: |
          echo "ðŸ‘€ Committing SDK version update..."

          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          git add .
          git commit -m "SDK Update - $_SDK_PACKAGE $_SDK_VERSION"
          git push origin $_BRANCH_NAME

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          _BRANCH_NAME: ${{ steps.switch-branch.outputs.branch_name }}
          _SDK_PACKAGE: ${{ inputs.sdk-package }}
          _SDK_VERSION: ${{ inputs.sdk-version }}
          _OLD_SDK_VERSION: ${{ steps.get-current-sdk.outputs.version }}
          _OLD_SDK_GIT_REF: ${{ steps.get-current-sdk.outputs.git_ref }}
        run: |
          NEW_SDK_GIT_REF=$(echo "$_SDK_VERSION" | cut -d'-' -f3-)
          CHANGELOG=$(./scripts/get-sdk-changelog.sh "$_OLD_SDK_GIT_REF" "$NEW_SDK_GIT_REF")
          PR_BODY="Updates the SDK version from \`$_OLD_SDK_VERSION\` to \`$_SDK_PACKAGE $_SDK_VERSION\`

          ## What's Changed

          $CHANGELOG"

          # Use echo -e to interpret escape sequences and pipe to gh pr create
          PR_URL=$(echo -e "$PR_BODY" | gh pr create \
            --title "Update SDK to $_SDK_VERSION" \
            --body-file - \
            --base main \
            --head $_BRANCH_NAME \
            --label "automated-pr" \
            --label "t:ci")

          echo "ðŸš€ Created PR: $PR_URL"

  test:
    name: Test SDK Update
    if: ${{ inputs.run-mode == 'Test' }}
    runs-on: ubuntu-24.04

    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Android Build
        uses: ./.github/actions/setup-android-build

      - name: Update SDK Version
        env:
          _SDK_PACKAGE: ${{ inputs.sdk-package }}
          _SDK_VERSION: ${{ inputs.sdk-version }}
        run: |
          ./scripts/update-sdk-version.sh "$_SDK_PACKAGE" "$_SDK_VERSION"

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Used in settings.gradle.kts to download the SDK from GitHub Maven Packages
        run: |
          bundle exec fastlane assembleDebugApks
          bundle exec fastlane buildAuthenticatorDebug
